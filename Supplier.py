# Ryan Jaipersaud, Armaan Thapar
# November 13, 2018
# Convex Optimization

# Supplier Solution

import numpy as np
from scipy.optimize import linprog

# Inequalities Matrix
A = np.array([
    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
    ])

# Results vector for inequalities
b = np.array([55, 55, 55, 0, 0, 0, 0, 0, 0, 10, 10, 10])

# Matrix of equalities
B = np.array([
    [-1, 0, 0, 1, 0, 0, 0, 0, 0, 1, -1, 0, 0],
    [0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 1, -1, 0],
    [0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 1, -1],
    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    ])

# Results vector for equalities
d = np.array([0, 0, 0, 1, 1, 1, 0, 30, 60, 60])

# Cost vector
c = np.array([0, 0, 0, 3, 3, 3, 7, 7, 7, 0, 11, 11, 11])

# Calculate Solution
sol = linprog(c, A, b, B, d)

# Print Solution
print(sol)
